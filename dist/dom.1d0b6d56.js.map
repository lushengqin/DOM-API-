{"version":3,"sources":["dom.js"],"names":["window","dom","create","tagName","document","createElement","createLabel","string","container","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","console","log","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(tagName){ //封装获取ID \r\n        return document.createElement(tagName)\r\n    },\r\n    createLabel(string){ //封装直接获取多个标签\r\n        // const container = document.createElement('div') //这里我尝试放div 但是引用之后得到的结果是undefined   \r\n        const container = document.createElement('template')\r\n        container.innerHTML = string.trim()//trim()去掉标签前面的空格\r\n        // return container.children[0] // template不能用children来获取它的孩子\r\n        return container.content.firstChild\r\n    },\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nextSibling)  //找到它最后一个孩子 然后添加到最后一个元素的后面\r\n    },\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node)  \r\n    },\r\n    append(parent,node){\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node,parent){ //给它的外面加一层爸爸\r\n        dom.before(node,parent)  //先添加一个父元素\r\n        dom.append(parent,node)  //再把原来的子元素加到新的父元素里面\r\n    },\r\n    remove(node){\r\n        node.parentNode.removeChild(node)\r\n        return node  //让外面能引用\r\n    },\r\n    empty(node){\r\n        const array=[]\r\n        let x = node.firstChild\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild   \r\n        }\r\n        return array\r\n    },\r\n    attr(node,name,value){\r\n        if(arguments.length===3){\r\n            node.setAttribute(name,value)\r\n        }else if(arguments.length ===2){\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node,string){\r\n        if(arguments.length ===2){ //长度为2 设置新的内容\r\n            console.log(1)\r\n            if('innerText' in node){\r\n                node.innerText = string\r\n            }else{\r\n                node.textContent = string\r\n            }\r\n        }else if(arguments.length === 1){ //长度为1 获取原内容\r\n            if('innerText' in node){\r\n                return node.innerText \r\n            }else{\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node,string){\r\n        if(arguments.length === 2){\r\n            console.log(222)\r\n            node.innerHTML = string\r\n        }else if(arguments.length ===1){\r\n            console.log(111)\r\n           return  node.innerHTML\r\n        }\r\n    },\r\n    style(node,name,value){\r\n        if(arguments.length ===3){  \r\n            //如果给他传三个值 那么就是设置\r\n            // dom.style(div,'color','red')\r\n            node.style[name] = value\r\n        }else if(arguments.length ===2){  //如果给他传两个值 字符串和对象不同\r\n            if(typeof name === 'string'){  \r\n                //它的值是字符串型 那么就是获取\r\n                // dom.style(div,'color') 获取它的color\r\n                return node.style[name]\r\n            }else if(name instanceof Object){ //如果它的值是对象 那么它也是设置\r\n                const object = name\r\n                for(let key in object){\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class:{\r\n        add(node,className){  //添加\r\n            node.classList.add(className) \r\n        },\r\n        remove(node,className){ //删除\r\n            console.log(222)\r\n            node.classList.remove(className)\r\n        },\r\n        has(node,className){ //检查是否包含某属性 得到布尔值 true 或 false\r\n            return node.classList.contains(className)\r\n        }\r\n\r\n    },\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n    find(selector,scope){\r\n        return(scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node){\r\n        return node.parentNode\r\n    },\r\n    children(node){\r\n        return node.children  \r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children).filter(n => n!==node)\r\n    },\r\n    next(node){\r\n        let x = node.nextSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node){\r\n        let x = node.previousSibling\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn){\r\n        for(let i =0 ;i<nodeList.length;i++){\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for(i=0;i<list.length;i++){\r\n            if(list[i]===node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n\r\n\r\n}"]}